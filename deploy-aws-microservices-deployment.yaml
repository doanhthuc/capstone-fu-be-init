apiVersion: apps/v1
kind: Deployment
metadata: 
  name: inventory-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: inventory-service
  template: 
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
        - name: inventory
          image: docker.io/doanhthuc/inventory-service
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3002
          command: ["/bin/sh","-c"]
          args: ["yarn typeorm migration:run -d ./src/data-source.ts && yarn start"]
          env:
          - name: NODE_ENV
            value: production
          - name: DATABASE_URL
            value: postgres://postgres:1@inventory-db:5432/fu-capstone-inventory
---
apiVersion: v1
kind: Service
metadata: 
  name: inventory-service
spec: 
  selector:
    app: inventory-service
  ports:
    - name: http
      protocol: TCP
      port: 3002
      targetPort: 3002
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: order-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: order-service
  template: 
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order
          image: docker.io/doanhthuc/order-service:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
          env:
          - name: SPRING_DATASOURCE_URL
            value: jdbc:postgresql://order-db:5432/fu-capstone-order
          - name: SPRING_DATASOURCE_USERNAME
            value: postgres
          - name: SPRING_DATASOURCE_PASSWORD
            value: "1"
---
apiVersion: v1
kind: Service
metadata: 
  name: order-service
spec: 
  selector:
    app: order-service
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: product-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: product-service
  template: 
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product
          image: docker.io/doanhthuc/product-service
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits: 
              memory: "128Mi"
              cpu: "200m"
          ports:
          - containerPort: 3000
          env:
          - name: PORT
            value: "3000"
          - name: NODE_ENV
            value: production
          - name: MONGO_URI
            value: mongodb://product-db:27017/
          - name: MONGO_INITDB_DATABASE
            value: fu-capstone-product
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: secret
---
apiVersion: v1
kind: Service
metadata: 
  name: product-service
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
  #   service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec: 
  selector:
    app: product-service
  ports:
    # - name: port-1
    #   protocol: TCP
    #   port: 3000
    #   targetPort: 3000
    #   nodePort: 30000
    - name: port-2
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: review-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: review-service
  template: 
    metadata:
      labels:
        app: review-service
    spec:
      containers:
        - name: review
          image: docker.io/doanhthuc/review-service
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3001
          env:
          - name: PORT
            value: "3001"
          - name: NODE_ENV
            value: production
          - name: MONGO_URI
            value: mongodb://review-db:27017/
          - name: MONGO_INITDB_DATABASE
            value: fu-capstone-review
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: secret
---
apiVersion: v1
kind: Service
metadata: 
  name: review-service
spec: 
  selector:
    app: review-service
  ports:
    - name: http
      protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: shopping-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: shopping-service
  template: 
    metadata:
      labels:
        app: shopping-service
    spec:
      containers:
        - name: shopping
          image: docker.io/doanhthuc/shopping-service
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3003
          env:
          - name: PORT
            value: "3003"
          - name: NODE_ENV
            value: production
          - name: MONGO_URI
            value: mongodb://shopping-db:27017/
          - name: MONGO_INITDB_DATABASE
            value: fu-capstone-shopping
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: secret
---
apiVersion: v1
kind: Service
metadata: 
  name: shopping-service
spec: 
  selector:
    app: shopping-service
  ports:
    - name: http
      protocol: TCP
      port: 3003
      targetPort: 3003
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: user-service-deployment
spec: 
  replicas: 1
  selector:
    matchLabels: 
      app: user-service
  template: 
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user
          image: docker.io/doanhthuc/user-service
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3004
          command: ["/bin/sh","-c"]
          args: ["yarn typeorm migration:run -d ./src/data-source.ts && yarn start"]
          env:
          - name: NODE_ENV
            value: production
          - name: DATABASE_URL
            value: postgres://postgres:1@user-db:5432/fu-capstone-user
---
apiVersion: v1
kind: Service
metadata: 
  name: user-service
spec: 
  selector:
    app: user-service
  ports:
    - name: http
      protocol: TCP
      port: 3004
      targetPort: 3004
  type: ClusterIP